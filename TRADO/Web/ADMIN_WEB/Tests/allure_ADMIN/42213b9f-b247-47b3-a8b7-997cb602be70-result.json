{"name": "test_with_null_store_id_fields", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED8F5F3D0>, expected = 'Osem Osemioio', actual = 'גדשגדשגדש גדשגדשגדש'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n>           assert expected == actual\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:15: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TRADO.ADMIN_WEB.Tests.test_Admin_product.Test_product_Chrome1 object at 0x000001DED83E88E0>\n\n    @pytest.mark.sanity\n    @allure.description('Insert data for sectin id and departments required inputs all field box with  null storeID ')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_with_null_store_id_fields(self):\n        driver = self.driver\n        production = Product_Page(driver)\n        production.click_on_product_sidebar()\n        production.click_kebab_buttons()\n        production.click_plusProduct_buttons()\n        production.enter_barcode_fields(\"123456\")\n        production.enter_name_fields(\"Arekie\")\n        production.enter_price_fields(\"200\")\n        production.click_next_product_buttons()\n        production.click_drope_down_section_button()\n        production.select_sections_from_given()\n        production.click_department_button()\n        production.click_drope_down_productTag_button()\n        production.select_product_tag_given()\n        production.click_next_productInfo_buttons()\n        text = production.Assert_text(Locators_Admin.ERROR_STORE_ID)\n        # text = production.Assert_store_id_page()\n>       Utils(driver).assertion(\"Osem Osemioio\", text)\n\ntest_Admin_product.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED8F5F3D0>, expected = 'Osem Osemioio', actual = 'גדשגדשגדש גדשגדשגדש'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n            assert expected == actual\n            self.driver.implicitly_wait(1000)\n        except AssertionError:\n            allure.attach(driver.get_screenshot_as_png(), name='screenShot',attachment_type=AttachmentType.PNG)\n>           raise AssertionError\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:19: AssertionError"}, "description": "Insert data for sectin id and departments required inputs all field box with  null storeID ", "steps": [{"name": "click_on_product_sidebar", "status": "passed", "start": 1677006091251, "stop": 1677006093370}, {"name": "click_kebab_buttons", "status": "passed", "start": 1677006093370, "stop": 1677006095449}, {"name": "click_plusProduct_buttons", "status": "passed", "start": 1677006095450, "stop": 1677006097579}, {"name": "enter_barcode_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'123456'"}, {"name": "actual", "value": "'123456'"}], "start": 1677006099738, "stop": 1677006099741}], "parameters": [{"name": "Barcode", "value": "'123456'"}], "start": 1677006097579, "stop": 1677006099741}, {"name": "enter_name_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Arekie'"}, {"name": "actual", "value": "'Arekie'"}], "start": 1677006101915, "stop": 1677006101918}], "parameters": [{"name": "Name", "value": "'Arekie'"}], "start": 1677006099742, "stop": 1677006101918}, {"name": "enter_price_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'200'"}, {"name": "actual", "value": "'200'"}], "start": 1677006104076, "stop": 1677006104079}], "parameters": [{"name": "Price", "value": "'200'"}], "start": 1677006101918, "stop": 1677006104079}, {"name": "click_next_product_buttons", "status": "passed", "start": 1677006104080, "stop": 1677006106196}, {"name": "click_drope_down_section_button", "status": "passed", "start": 1677006106196, "stop": 1677006108312}, {"name": "select_sections_from_given", "status": "passed", "start": 1677006108313, "stop": 1677006110408}, {"name": "click_department_button", "status": "passed", "start": 1677006110408, "stop": 1677006112501}, {"name": "click_drope_down_productTag_button", "status": "passed", "start": 1677006112501, "stop": 1677006114623}, {"name": "select_product_tag_given", "status": "passed", "start": 1677006114623, "stop": 1677006116728}, {"name": "click_next_productInfo_buttons", "status": "passed", "start": 1677006116728, "stop": 1677006118846}, {"name": "Assert_text", "status": "passed", "parameters": [{"name": "path", "value": "'/html/body/div/div[1]/div[4]/div/div/span/form/div[2]/div[5]/div[1]/span[1]/div[2]/div/div[4]'"}], "start": 1677006118846, "stop": 1677006118886}, {"name": "assertion", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Utils\\utils_Admin.py\", line 19, in assertion\n    raise AssertionError\n"}, "attachments": [{"name": "screenShot", "source": "d5d2fbaf-07b1-42d8-84e1-542515704494-attachment.png", "type": "image/png"}], "parameters": [{"name": "expected", "value": "'Osem Osemioio'"}, {"name": "actual", "value": "'גדשגדשגדש גדשגדשגדש'"}], "start": 1677006118886, "stop": 1677006119162}], "attachments": [{"name": "stdout", "source": "e57751b9-3e9d-42df-97a1-2cfccfafddeb-attachment.txt", "type": "text/plain"}], "start": 1677006091251, "stop": 1677006119163, "uuid": "61c7c1ac-66cd-4511-8374-f8d6135875a6", "historyId": "67d00e244ad841aefe253a464576f4bd", "testCaseId": "b1e12db8e340f93c1914e64aa6a10655", "fullName": "test_Admin_product.Test_product_Chrome1#test_with_null_store_id_fields", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Valid_Login_to_Admin_homePage_With_Chrome_Valid_data_and_Trado_store')"}, {"name": "suite", "value": "test_Admin_product"}, {"name": "subSuite", "value": "Test_product_Chrome1"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "7280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Admin_product"}]}