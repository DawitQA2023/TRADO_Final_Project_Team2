{"name": "test_without_storeid_update_user_to_admin", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"checkbox_checkboxCircleLTR\"></span> is not clickable at point (892, 708). Other element would receive the click: <div class=\"input_overlay\"></div>\n  (Session info: chrome=110.0.5481.104)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x005837D3]\n\t(No symbol) [0x00518B81]\n\t(No symbol) [0x0041B36D]\n\t(No symbol) [0x00454E3B]\n\t(No symbol) [0x004526DB]\n\t(No symbol) [0x0044FD0B]\n\t(No symbol) [0x0044E4D8]\n\t(No symbol) [0x00443253]\n\t(No symbol) [0x0046B41C]\n\t(No symbol) [0x00442B96]\n\t(No symbol) [0x0046B774]\n\t(No symbol) [0x00481215]\n\t(No symbol) [0x0046B216]\n\t(No symbol) [0x00440D97]\n\t(No symbol) [0x0044253D]\n\tGetHandleVerifier [0x007FABF2+2510930]\n\tGetHandleVerifier [0x00828EC1+2700065]\n\tGetHandleVerifier [0x0082C86C+2714828]\n\tGetHandleVerifier [0x00633480+645344]\n\t(No symbol) [0x00520FD2]\n\t(No symbol) [0x00526C68]\n\t(No symbol) [0x00526D4B]\n\t(No symbol) [0x00530D6B]\n\tBaseThreadInitThunk [0x75D400F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779F7BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x779F7B8E+238]", "trace": "self = <TRADO.ADMIN_WEB.Tests.test_Admin_user.Test_User_Chrome object at 0x000001DED8429B70>\n\n    @pytest.mark.sanity\n    @allure.description('Trying to UPDATE DATA from admin user WITHOUT STOREID fields')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_without_storeid_update_user_to_admin(self):\n        driver = self.driver\n        user = User_Page(driver)\n        user.click_User_Menu_Option()\n        user.click_LANGUAGE()\n        user.click_team_two_to_update()\n        user.enter_FirstName(\"Team\")\n        user.enter_LastName(\"Two\")\n        user.enter_email(\"teamtwo@gmail.co\")\n        user.enter_phone(\"0501010101\")\n        user.enter_aditional_phone(\"0500000000\")\n        user.enter_storeid_pw(\"\")\n        user.enter_city(\"Telavive\")\n        user.enter_building_no(\"22\")\n        user.enter_apartment_no(\"4\")\n        user.enter_floor_no(\"7\")\n        user.enter_comments(\"suuuuuuuuuuu\")\n        user.enter_account_owner(\"Group2\")\n        user.enter_account_no(\"123\")\n        user.enter_branch_no(\"21\")\n>       user.click_credicsaccount()\n\ntest_Admin_user.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\userAdmin_page.py:272: in click_credicsaccount\n    self.driver.find_element(By.XPATH, Locators_User.CREDICSACCOUNT_XPATH).click()\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DED8E85090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x779F7BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x779F7B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"checkbox_checkboxCircleLTR\"></span> is not clickable at point (892, 708). Other element would receive the click: <div class=\"input_overlay\"></div>\nE         (Session info: chrome=110.0.5481.104)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x005837D3]\nE       \t(No symbol) [0x00518B81]\nE       \t(No symbol) [0x0041B36D]\nE       \t(No symbol) [0x00454E3B]\nE       \t(No symbol) [0x004526DB]\nE       \t(No symbol) [0x0044FD0B]\nE       \t(No symbol) [0x0044E4D8]\nE       \t(No symbol) [0x00443253]\nE       \t(No symbol) [0x0046B41C]\nE       \t(No symbol) [0x00442B96]\nE       \t(No symbol) [0x0046B774]\nE       \t(No symbol) [0x00481215]\nE       \t(No symbol) [0x0046B216]\nE       \t(No symbol) [0x00440D97]\nE       \t(No symbol) [0x0044253D]\nE       \tGetHandleVerifier [0x007FABF2+2510930]\nE       \tGetHandleVerifier [0x00828EC1+2700065]\nE       \tGetHandleVerifier [0x0082C86C+2714828]\nE       \tGetHandleVerifier [0x00633480+645344]\nE       \t(No symbol) [0x00520FD2]\nE       \t(No symbol) [0x00526C68]\nE       \t(No symbol) [0x00526D4B]\nE       \t(No symbol) [0x00530D6B]\nE       \tBaseThreadInitThunk [0x75D400F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x779F7BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x779F7B8E+238]\n\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "description": "Trying to UPDATE DATA from admin user WITHOUT STOREID fields", "steps": [{"name": "click_User_Menu_Option", "status": "passed", "start": 1677007358705, "stop": 1677007362888}, {"name": "click_LANGUAGE", "status": "passed", "start": 1677007362888, "stop": 1677007363994}, {"name": "click_team_two_to_update", "status": "passed", "start": 1677007363994, "stop": 1677007365214}, {"name": "enter_FirstName", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Team'"}, {"name": "actual", "value": "'Team'"}], "start": 1677007366395, "stop": 1677007366398}], "parameters": [{"name": "FirstName", "value": "'Team'"}], "start": 1677007365214, "stop": 1677007366398}, {"name": "enter_LastName", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Two'"}, {"name": "actual", "value": "'Two'"}], "start": 1677007367536, "stop": 1677007367540}], "parameters": [{"name": "LastName", "value": "'Two'"}], "start": 1677007366398, "stop": 1677007367540}, {"name": "enter_email", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'teamtwo@gmail.co'"}, {"name": "actual", "value": "'teamtwo@gmail.co'"}], "start": 1677007368664, "stop": 1677007368667}], "parameters": [{"name": "email", "value": "'teamtwo@gmail.co'"}], "start": 1677007367540, "stop": 1677007368667}, {"name": "enter_phone", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'0501010101'"}, {"name": "actual", "value": "'0501010101'"}], "start": 1677007369835, "stop": 1677007369838}], "parameters": [{"name": "phone", "value": "'0501010101'"}], "start": 1677007368667, "stop": 1677007369838}, {"name": "enter_aditional_phone", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'0500000000'"}, {"name": "actual", "value": "'0500000000'"}], "start": 1677007370992, "stop": 1677007370995}], "parameters": [{"name": "adi_phone", "value": "'0500000000'"}], "start": 1677007369839, "stop": 1677007370995}, {"name": "enter_storeid_pw", "status": "passed", "parameters": [{"name": "storeid", "value": "''"}], "start": 1677007370995, "stop": 1677007372101}, {"name": "enter_city", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Telavive'"}, {"name": "actual", "value": "'Telavive'"}], "start": 1677007373276, "stop": 1677007373279}], "parameters": [{"name": "city", "value": "'Telavive'"}], "start": 1677007372102, "stop": 1677007373279}, {"name": "enter_building_no", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'22'"}, {"name": "actual", "value": "'22'"}], "start": 1677007374423, "stop": 1677007374426}], "parameters": [{"name": "build", "value": "'22'"}], "start": 1677007373279, "stop": 1677007374427}, {"name": "enter_apartment_no", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'4'"}, {"name": "actual", "value": "'4'"}], "start": 1677007375571, "stop": 1677007375574}], "parameters": [{"name": "apartmen", "value": "'4'"}], "start": 1677007374427, "stop": 1677007375574}, {"name": "enter_floor_no", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'7'"}, {"name": "actual", "value": "'7'"}], "start": 1677007376735, "stop": 1677007376739}], "parameters": [{"name": "floor", "value": "'7'"}], "start": 1677007375574, "stop": 1677007376739}, {"name": "enter_comments", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'suuuuuuuuuuu'"}, {"name": "actual", "value": "'suuuuuuuuuuu'"}], "start": 1677007377872, "stop": 1677007377875}], "parameters": [{"name": "comment", "value": "'suuuuuuuuuuu'"}], "start": 1677007376739, "stop": 1677007377875}, {"name": "enter_account_owner", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Group2'"}, {"name": "actual", "value": "'Group2'"}], "start": 1677007379019, "stop": 1677007379023}], "parameters": [{"name": "accountOwner", "value": "'Group2'"}], "start": 1677007377875, "stop": 1677007379023}, {"name": "enter_account_no", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'123'"}, {"name": "actual", "value": "'123'"}], "start": 1677007380174, "stop": 1677007380178}], "parameters": [{"name": "accountNo", "value": "'123'"}], "start": 1677007379023, "stop": 1677007380178}, {"name": "enter_branch_no", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'21'"}, {"name": "actual", "value": "'21'"}], "start": 1677007381334, "stop": 1677007381338}], "parameters": [{"name": "branch", "value": "'21'"}], "start": 1677007380178, "stop": 1677007381338}, {"name": "click_credicsaccount", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"checkbox_checkboxCircleLTR\"></span> is not clickable at point (892, 708). Other element would receive the click: <div class=\"input_overlay\"></div>\n  (Session info: chrome=110.0.5481.104)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x005837D3]\n\t(No symbol) [0x00518B81]\n\t(No symbol) [0x0041B36D]\n\t(No symbol) [0x00454E3B]\n\t(No symbol) [0x004526DB]\n\t(No symbol) [0x0044FD0B]\n\t(No symbol) [0x0044E4D8]\n\t(No symbol) [0x00443253]\n\t(No symbol) [0x0046B41C]\n\t(No symbol) [0x00442B96]\n\t(No symbol) [0x0046B774]\n\t(No symbol) [0x00481215]\n\t(No symbol) [0x0046B216]\n\t(No symbol) [0x00440D97]\n\t(No symbol) [0x0044253D]\n\tGetHandleVerifier [0x007FABF2+2510930]\n\tGetHandleVerifier [0x00828EC1+2700065]\n\tGetHandleVerifier [0x0082C86C+2714828]\n\tGetHandleVerifier [0x00633480+645344]\n\t(No symbol) [0x00520FD2]\n\t(No symbol) [0x00526C68]\n\t(No symbol) [0x00526D4B]\n\t(No symbol) [0x00530D6B]\n\tBaseThreadInitThunk [0x75D400F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779F7BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x779F7B8E+238]\n\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Pages\\userAdmin_page.py\", line 272, in click_credicsaccount\n    self.driver.find_element(By.XPATH, Locators_User.CREDICSACCOUNT_XPATH).click()\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1677007381338, "stop": 1677007383414}], "attachments": [{"name": "stdout", "source": "315e59be-45cb-4578-aaed-198b90313acc-attachment.txt", "type": "text/plain"}], "start": 1677007358705, "stop": 1677007383416, "uuid": "9946cf2e-e1fb-4527-af0a-fcccdbb10c76", "historyId": "3b99208820f08a397d63116f9f5a7146", "testCaseId": "cbda342fbd418d85f5a79e40f9f52c96", "fullName": "test_Admin_user.Test_User_Chrome#test_without_storeid_update_user_to_admin", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Valid_Login_to_Admin_homePage_With_Chrome_Valid_data_and_Trado_store')"}, {"name": "suite", "value": "test_Admin_user"}, {"name": "subSuite", "value": "Test_User_Chrome"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "7280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Admin_user"}]}