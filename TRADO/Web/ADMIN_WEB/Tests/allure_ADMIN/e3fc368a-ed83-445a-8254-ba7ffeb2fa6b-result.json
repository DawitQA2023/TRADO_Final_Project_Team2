{"name": "test_only_sectionID_required_fields", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED8EE5570>, expected = 'קטגוריה על*', actual = 'גדשגדשגדש גדשגדשגדש'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n>           assert expected == actual\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:15: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TRADO.ADMIN_WEB.Tests.test_Admin_product.Test_product_Chrome1 object at 0x000001DED83E8580>\n\n    @pytest.mark.sanity\n    @allure.description('Insert data for ONLY SECTION_ID required all field box with storeID ')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_only_sectionID_required_fields(self):\n        driver = self.driver\n        production = Product_Page(driver)\n        production.click_on_product_sidebar()\n        production.click_kebab_buttons()\n        production.click_plusProduct_buttons()\n        production.enter_barcode_fields(\"123456\")\n        production.enter_name_fields(\"Arekie\")\n        production.enter_price_fields(\"200\")\n        production.click_next_product_buttons()\n        production.click_drope_down_section_button()\n        production.select_sections_from_given()\n        production.click_department_button()\n        production.click_next_productInfo_buttons()\n        # text = production.Assert_store_id_page()\n        text = production.Assert_text(Locators_Admin.ERROR_STORE_ID)\n>       Utils(driver).assertion(\"קטגוריה על*\", text)\n\ntest_Admin_product.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED8EE5570>, expected = 'קטגוריה על*', actual = 'גדשגדשגדש גדשגדשגדש'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n            assert expected == actual\n            self.driver.implicitly_wait(1000)\n        except AssertionError:\n            allure.attach(driver.get_screenshot_as_png(), name='screenShot',attachment_type=AttachmentType.PNG)\n>           raise AssertionError\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:19: AssertionError"}, "description": "Insert data for ONLY SECTION_ID required all field box with storeID ", "steps": [{"name": "click_on_product_sidebar", "status": "passed", "start": 1677005996982, "stop": 1677005999114}, {"name": "click_kebab_buttons", "status": "passed", "start": 1677005999114, "stop": 1677006001196}, {"name": "click_plusProduct_buttons", "status": "passed", "start": 1677006001196, "stop": 1677006003310}, {"name": "enter_barcode_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'123456'"}, {"name": "actual", "value": "'123456'"}], "start": 1677006005469, "stop": 1677006005473}], "parameters": [{"name": "Barcode", "value": "'123456'"}], "start": 1677006003312, "stop": 1677006005473}, {"name": "enter_name_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Arekie'"}, {"name": "actual", "value": "'Arekie'"}], "start": 1677006007653, "stop": 1677006007656}], "parameters": [{"name": "Name", "value": "'Arekie'"}], "start": 1677006005473, "stop": 1677006007656}, {"name": "enter_price_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'200'"}, {"name": "actual", "value": "'200'"}], "start": 1677006009819, "stop": 1677006009822}], "parameters": [{"name": "Price", "value": "'200'"}], "start": 1677006007656, "stop": 1677006009823}, {"name": "click_next_product_buttons", "status": "passed", "start": 1677006009823, "stop": 1677006011960}, {"name": "click_drope_down_section_button", "status": "passed", "start": 1677006011961, "stop": 1677006014077}, {"name": "select_sections_from_given", "status": "passed", "start": 1677006014077, "stop": 1677006016191}, {"name": "click_department_button", "status": "passed", "start": 1677006016191, "stop": 1677006018295}, {"name": "click_next_productInfo_buttons", "status": "passed", "start": 1677006018296, "stop": 1677006020405}, {"name": "Assert_text", "status": "passed", "parameters": [{"name": "path", "value": "'/html/body/div/div[1]/div[4]/div/div/span/form/div[2]/div[5]/div[1]/span[1]/div[2]/div/div[4]'"}], "start": 1677006020405, "stop": 1677006020442}, {"name": "assertion", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Utils\\utils_Admin.py\", line 19, in assertion\n    raise AssertionError\n"}, "attachments": [{"name": "screenShot", "source": "c10e066e-7b8d-4456-bdb0-331a48a4a99b-attachment.png", "type": "image/png"}], "parameters": [{"name": "expected", "value": "'קטגוריה על*'"}, {"name": "actual", "value": "'גדשגדשגדש גדשגדשגדש'"}], "start": 1677006020442, "stop": 1677006020708}], "attachments": [{"name": "stdout", "source": "cbe7aff7-cb56-4725-8548-c9bae1bbd007-attachment.txt", "type": "text/plain"}], "start": 1677005996981, "stop": 1677006020709, "uuid": "bdcf721c-2a61-4478-8f25-fd28972dd299", "historyId": "a0bb4efcbdc371365e99d468b7919c6f", "testCaseId": "f656d1e4de0d705a3ba87f8559eb0fea", "fullName": "test_Admin_product.Test_product_Chrome1#test_only_sectionID_required_fields", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Valid_Login_to_Admin_homePage_With_Chrome_Valid_data_and_Trado_store')"}, {"name": "suite", "value": "test_Admin_product"}, {"name": "subSuite", "value": "Test_product_Chrome1"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "7280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Admin_product"}]}