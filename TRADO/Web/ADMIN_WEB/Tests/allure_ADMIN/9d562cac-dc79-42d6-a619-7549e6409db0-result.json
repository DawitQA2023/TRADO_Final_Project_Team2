{"name": "test_with_minOrder_and_unit_required_fields", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED861EE00>, expected = 10, actual = '10'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n>           assert expected == actual\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:15: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TRADO.ADMIN_WEB.Tests.test_Admin_product.Test_product_Chrome1 object at 0x000001DED83E8FA0>\n\n    @pytest.mark.sanity\n    @allure.description(\n        'Enter a data only \"UNIT_IN CARTONE AND MIN ORDER \" for required fields in product unit page ' 'if any..')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_with_minOrder_and_unit_required_fields(self):\n        driver = self.driver\n        production = Product_Page(driver)\n        production.click_on_product_sidebar()\n        production.click_kebab_buttons()\n        production.click_plusProduct_buttons()\n        production.enter_barcode_fields(\"123456\")\n        production.enter_name_fields(\"Arekie\")\n        production.enter_price_fields(\"200\")\n        production.click_next_product_buttons()\n        production.click_drope_down_section_button()\n        production.select_sections_from_given()\n        production.click_department_button()\n        production.click_drope_down_productTag_button()\n        production.select_product_tag_given()\n        production.click_drope_down_store_button()\n        production.select_store_from_given()\n        production.click_next_productInfo_buttons()\n>       production.enter_unitCarton_fields(10)\n\ntest_Admin_product.py:317: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\productAdmin_page.py:193: in enter_unitCarton_fields\n    Utils(self.driver).assertion(unit_inCarton, unit_inCarton_input.get_attribute('value'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED861EE00>, expected = 10, actual = '10'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n            assert expected == actual\n            self.driver.implicitly_wait(1000)\n        except AssertionError:\n            allure.attach(driver.get_screenshot_as_png(), name='screenShot',attachment_type=AttachmentType.PNG)\n>           raise AssertionError\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:19: AssertionError"}, "description": "Enter a data only \"UNIT_IN CARTONE AND MIN ORDER \" for required fields in product unit page if any..", "steps": [{"name": "click_on_product_sidebar", "status": "passed", "start": 1677006333819, "stop": 1677006335935}, {"name": "click_kebab_buttons", "status": "passed", "start": 1677006335936, "stop": 1677006338022}, {"name": "click_plusProduct_buttons", "status": "passed", "start": 1677006338022, "stop": 1677006340137}, {"name": "enter_barcode_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'123456'"}, {"name": "actual", "value": "'123456'"}], "start": 1677006342306, "stop": 1677006342310}], "parameters": [{"name": "Barcode", "value": "'123456'"}], "start": 1677006340137, "stop": 1677006342310}, {"name": "enter_name_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Arekie'"}, {"name": "actual", "value": "'Arekie'"}], "start": 1677006344458, "stop": 1677006344461}], "parameters": [{"name": "Name", "value": "'Arekie'"}], "start": 1677006342310, "stop": 1677006344461}, {"name": "enter_price_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'200'"}, {"name": "actual", "value": "'200'"}], "start": 1677006346627, "stop": 1677006346631}], "parameters": [{"name": "Price", "value": "'200'"}], "start": 1677006344461, "stop": 1677006346631}, {"name": "click_next_product_buttons", "status": "passed", "start": 1677006346631, "stop": 1677006348751}, {"name": "click_drope_down_section_button", "status": "passed", "start": 1677006348752, "stop": 1677006350864}, {"name": "select_sections_from_given", "status": "passed", "start": 1677006350864, "stop": 1677006352970}, {"name": "click_department_button", "status": "passed", "start": 1677006352970, "stop": 1677006355064}, {"name": "click_drope_down_productTag_button", "status": "passed", "start": 1677006355064, "stop": 1677006357178}, {"name": "select_product_tag_given", "status": "passed", "start": 1677006357178, "stop": 1677006359282}, {"name": "click_drope_down_store_button", "status": "passed", "start": 1677006359282, "stop": 1677006361414}, {"name": "select_store_from_given", "status": "passed", "start": 1677006361415, "stop": 1677006363511}, {"name": "click_next_productInfo_buttons", "status": "passed", "start": 1677006363512, "stop": 1677006365590}, {"name": "enter_unitCarton_fields", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Pages\\productAdmin_page.py\", line 193, in enter_unitCarton_fields\n    Utils(self.driver).assertion(unit_inCarton, unit_inCarton_input.get_attribute('value'))\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Utils\\utils_Admin.py\", line 19, in assertion\n    raise AssertionError\n"}, "steps": [{"name": "assertion", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Utils\\utils_Admin.py\", line 19, in assertion\n    raise AssertionError\n"}, "attachments": [{"name": "screenShot", "source": "e1ae980a-1359-4999-bfb0-0c2d75fc0b91-attachment.png", "type": "image/png"}], "parameters": [{"name": "expected", "value": "10"}, {"name": "actual", "value": "'10'"}], "start": 1677006366743, "stop": 1677006366953}], "parameters": [{"name": "unit_inCarton", "value": "10"}], "start": 1677006365590, "stop": 1677006366954}], "attachments": [{"name": "stdout", "source": "66b96e57-dc0a-40fe-88bd-6876ed19d7fd-attachment.txt", "type": "text/plain"}], "start": 1677006333818, "stop": 1677006366955, "uuid": "c7ad1948-0b4a-4576-9f80-ccaf7b1d6469", "historyId": "5093d63de39a4bd85f821b1ca45a37df", "testCaseId": "6d70e11f6aa2e32b2e74fb82fd497ee0", "fullName": "test_Admin_product.Test_product_Chrome1#test_with_minOrder_and_unit_required_fields", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Valid_Login_to_Admin_homePage_With_Chrome_Valid_data_and_Trado_store')"}, {"name": "suite", "value": "test_Admin_product"}, {"name": "subSuite", "value": "Test_product_Chrome1"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "7280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Admin_product"}]}