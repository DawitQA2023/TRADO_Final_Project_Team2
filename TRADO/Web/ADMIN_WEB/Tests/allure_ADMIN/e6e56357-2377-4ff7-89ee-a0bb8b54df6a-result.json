{"name": "test_only_street_required_fields", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED8ECD9F0>, expected = 100, actual = '100'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n>           assert expected == actual\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:15: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TRADO.ADMIN_WEB.Tests.test_Admin_product.Test_product_Chrome1 object at 0x000001DED83E94B0>\n\n    @pytest.mark.sanity\n    @allure.description('Enter a NULL INPUT  for requeired fields in product delivery paga if any..')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_only_street_required_fields(self):\n        driver = self.driver\n        production = Product_Page(driver)\n        production.click_on_product_sidebar()\n        production.click_kebab_buttons()\n        production.click_plusProduct_buttons()\n        production.enter_barcode_fields(\"123456\")\n        production.enter_name_fields(\"Arekie\")\n        production.enter_price_fields(\"200\")\n        production.click_next_product_buttons()\n        production.click_drope_down_section_button()\n        production.select_sections_from_given()\n        production.click_department_button()\n        production.click_drope_down_productTag_button()\n        production.select_product_tag_given()\n        production.click_drope_down_store_button()\n        production.select_store_from_given()\n        production.click_next_productInfo_buttons()\n>       production.enter_amount_fields(100)\n\ntest_Admin_product.py:411: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\productAdmin_page.py:184: in enter_amount_fields\n    Utils(self.driver).assertion(Amount, Amount_input.get_attribute('value'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TRADO.ADMIN_WEB.Utils.utils_Admin.Utils object at 0x000001DED8ECD9F0>, expected = 100, actual = '100'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n            assert expected == actual\n            self.driver.implicitly_wait(1000)\n        except AssertionError:\n            allure.attach(driver.get_screenshot_as_png(), name='screenShot',attachment_type=AttachmentType.PNG)\n>           raise AssertionError\nE           AssertionError\n\n..\\Utils\\utils_Admin.py:19: AssertionError"}, "description": "Enter a NULL INPUT  for requeired fields in product delivery paga if any..", "steps": [{"name": "click_on_product_sidebar", "status": "passed", "start": 1677006512972, "stop": 1677006515086}, {"name": "click_kebab_buttons", "status": "passed", "start": 1677006515086, "stop": 1677006517192}, {"name": "click_plusProduct_buttons", "status": "passed", "start": 1677006517193, "stop": 1677006519308}, {"name": "enter_barcode_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'123456'"}, {"name": "actual", "value": "'123456'"}], "start": 1677006521455, "stop": 1677006521458}], "parameters": [{"name": "Barcode", "value": "'123456'"}], "start": 1677006519308, "stop": 1677006521458}, {"name": "enter_name_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'Arekie'"}, {"name": "actual", "value": "'Arekie'"}], "start": 1677006523632, "stop": 1677006523635}], "parameters": [{"name": "Name", "value": "'Arekie'"}], "start": 1677006521459, "stop": 1677006523635}, {"name": "enter_price_fields", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'200'"}, {"name": "actual", "value": "'200'"}], "start": 1677006525802, "stop": 1677006525805}], "parameters": [{"name": "Price", "value": "'200'"}], "start": 1677006523636, "stop": 1677006525805}, {"name": "click_next_product_buttons", "status": "passed", "start": 1677006525805, "stop": 1677006527943}, {"name": "click_drope_down_section_button", "status": "passed", "start": 1677006527943, "stop": 1677006530051}, {"name": "select_sections_from_given", "status": "passed", "start": 1677006530051, "stop": 1677006532164}, {"name": "click_department_button", "status": "passed", "start": 1677006532164, "stop": 1677006534273}, {"name": "click_drope_down_productTag_button", "status": "passed", "start": 1677006534273, "stop": 1677006536386}, {"name": "select_product_tag_given", "status": "passed", "start": 1677006536386, "stop": 1677006538496}, {"name": "click_drope_down_store_button", "status": "passed", "start": 1677006538496, "stop": 1677006540616}, {"name": "select_store_from_given", "status": "passed", "start": 1677006540616, "stop": 1677006542725}, {"name": "click_next_productInfo_buttons", "status": "passed", "start": 1677006542725, "stop": 1677006544840}, {"name": "enter_amount_fields", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Pages\\productAdmin_page.py\", line 184, in enter_amount_fields\n    Utils(self.driver).assertion(Amount, Amount_input.get_attribute('value'))\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Utils\\utils_Admin.py\", line 19, in assertion\n    raise AssertionError\n"}, "steps": [{"name": "assertion", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\ADMIN_WEB\\Utils\\utils_Admin.py\", line 19, in assertion\n    raise AssertionError\n"}, "attachments": [{"name": "screenShot", "source": "31fe31ed-02cc-4002-b8b4-2d5a8a5c5916-attachment.png", "type": "image/png"}], "parameters": [{"name": "expected", "value": "100"}, {"name": "actual", "value": "'100'"}], "start": 1677006545969, "stop": 1677006546168}], "parameters": [{"name": "Amount", "value": "100"}], "start": 1677006544840, "stop": 1677006546169}], "attachments": [{"name": "stdout", "source": "381fc608-9dbd-4edd-8bba-70e66a978a07-attachment.txt", "type": "text/plain"}], "start": 1677006512971, "stop": 1677006546170, "uuid": "25990684-1319-439b-a9b4-5ce663746616", "historyId": "dcd4528535e10c8b14dd4a80c672cd89", "testCaseId": "56c62e3480779232494407d13b1e8c86", "fullName": "test_Admin_product.Test_product_Chrome1#test_only_street_required_fields", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Valid_Login_to_Admin_homePage_With_Chrome_Valid_data_and_Trado_store')"}, {"name": "suite", "value": "test_Admin_product"}, {"name": "subSuite", "value": "Test_product_Chrome1"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "7280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Admin_product"}]}