{"name": "test_Personal_area_all_with_null_city", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (409, 718)\n  (Session info: chrome=110.0.5481.104)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x008937D3]\n\t(No symbol) [0x00828B81]\n\t(No symbol) [0x0072B36D]\n\t(No symbol) [0x00764E3B]\n\t(No symbol) [0x007626DB]\n\t(No symbol) [0x0075FD0B]\n\t(No symbol) [0x0075E4D8]\n\t(No symbol) [0x00753253]\n\t(No symbol) [0x0077B41C]\n\t(No symbol) [0x00752B96]\n\t(No symbol) [0x0077B774]\n\t(No symbol) [0x00791215]\n\t(No symbol) [0x0077B216]\n\t(No symbol) [0x00750D97]\n\t(No symbol) [0x0075253D]\n\tGetHandleVerifier [0x00B0ABF2+2510930]\n\tGetHandleVerifier [0x00B38EC1+2700065]\n\tGetHandleVerifier [0x00B3C86C+2714828]\n\tGetHandleVerifier [0x00943480+645344]\n\t(No symbol) [0x00830FD2]\n\t(No symbol) [0x00836C68]\n\t(No symbol) [0x00836D4B]\n\t(No symbol) [0x00840D6B]\n\tBaseThreadInitThunk [0x75C700F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C77BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C77B8E+238]", "trace": "self = <TRADO.QA_WEB.Tests.test_PersonalArea.Test_personalArea_Chrome object at 0x0000023EA112E6B0>\n\n    @pytest.mark.sanity\n    @allure.description('Test when not entering a city in the field')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_Personal_area_all_with_null_city(self):\n        driver = self.driver\n        page = PageArea_page(driver)\n        page.Click_Personal_Area()\n        page.click_Edit_button()\n        page.enter_first_name(\"dawit\")\n        page.enter_last_name(\"samson\")\n        page.enter_phone(Fix_PoneNumber)\n        page.enter_email(\"dawit@gmail.com\")\n        page.enter_id(\"2222222222\")\n        page.enter_city('')\n        page.enter_number('2')\n>       page.click_Save_button()\n\ntest_PersonalArea.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\personalAreaQA_Page.py:98: in click_Save_button\n    self.driver.find_element(By.XPATH, Locators_PersonalArea.SAVE_BUTTON_XPATH).click()\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023EA115B550>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C77BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C77B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (409, 718)\nE         (Session info: chrome=110.0.5481.104)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x008937D3]\nE       \t(No symbol) [0x00828B81]\nE       \t(No symbol) [0x0072B36D]\nE       \t(No symbol) [0x00764E3B]\nE       \t(No symbol) [0x007626DB]\nE       \t(No symbol) [0x0075FD0B]\nE       \t(No symbol) [0x0075E4D8]\nE       \t(No symbol) [0x00753253]\nE       \t(No symbol) [0x0077B41C]\nE       \t(No symbol) [0x00752B96]\nE       \t(No symbol) [0x0077B774]\nE       \t(No symbol) [0x00791215]\nE       \t(No symbol) [0x0077B216]\nE       \t(No symbol) [0x00750D97]\nE       \t(No symbol) [0x0075253D]\nE       \tGetHandleVerifier [0x00B0ABF2+2510930]\nE       \tGetHandleVerifier [0x00B38EC1+2700065]\nE       \tGetHandleVerifier [0x00B3C86C+2714828]\nE       \tGetHandleVerifier [0x00943480+645344]\nE       \t(No symbol) [0x00830FD2]\nE       \t(No symbol) [0x00836C68]\nE       \t(No symbol) [0x00836D4B]\nE       \t(No symbol) [0x00840D6B]\nE       \tBaseThreadInitThunk [0x75C700F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C77BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C77B8E+238]\n\n..\\..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "description": "Test when not entering a city in the field", "steps": [{"name": "Click_Personal_Area", "status": "passed", "start": 1677091170790, "stop": 1677091172892}, {"name": "click_Edit_button", "status": "passed", "start": 1677091172892, "stop": 1677091172947}, {"name": "enter_first_name", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'dawit'"}, {"name": "actual", "value": "'dawit'"}], "start": 1677091173075, "stop": 1677091173076}], "parameters": [{"name": "first_name1", "value": "'dawit'"}], "start": 1677091172948, "stop": 1677091173076}, {"name": "enter_last_name", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'samson'"}, {"name": "actual", "value": "'samson'"}], "start": 1677091173191, "stop": 1677091173193}], "parameters": [{"name": "last_name1", "value": "'samson'"}], "start": 1677091173076, "stop": 1677091173193}, {"name": "enter_phone", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'0548890900'"}, {"name": "actual", "value": "'0548890900'"}], "start": 1677091173296, "stop": 1677091173298}], "parameters": [{"name": "phone1", "value": "'0548890900'"}], "start": 1677091173193, "stop": 1677091173298}, {"name": "enter_email", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'dawit@gmail.com'"}, {"name": "actual", "value": "'dawit@gmail.com'"}], "start": 1677091173402, "stop": 1677091173404}], "parameters": [{"name": "email1", "value": "'dawit@gmail.com'"}], "start": 1677091173298, "stop": 1677091173404}, {"name": "enter_id", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'2222222222'"}, {"name": "actual", "value": "'2222222222'"}], "start": 1677091173538, "stop": 1677091173540}], "parameters": [{"name": "id1", "value": "'2222222222'"}], "start": 1677091173404, "stop": 1677091173540}, {"name": "enter_city", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "''"}, {"name": "actual", "value": "''"}], "start": 1677091173638, "stop": 1677091173639}], "parameters": [{"name": "city1", "value": "''"}], "start": 1677091173540, "stop": 1677091173639}, {"name": "enter_number", "status": "passed", "steps": [{"name": "assertion", "status": "passed", "parameters": [{"name": "expected", "value": "'2'"}, {"name": "actual", "value": "'2'"}], "start": 1677091173765, "stop": 1677091173768}], "parameters": [{"name": "number1", "value": "'2'"}], "start": 1677091173639, "stop": 1677091173768}, {"name": "click_Save_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (409, 718)\n  (Session info: chrome=110.0.5481.104)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x008937D3]\n\t(No symbol) [0x00828B81]\n\t(No symbol) [0x0072B36D]\n\t(No symbol) [0x00764E3B]\n\t(No symbol) [0x007626DB]\n\t(No symbol) [0x0075FD0B]\n\t(No symbol) [0x0075E4D8]\n\t(No symbol) [0x00753253]\n\t(No symbol) [0x0077B41C]\n\t(No symbol) [0x00752B96]\n\t(No symbol) [0x0077B774]\n\t(No symbol) [0x00791215]\n\t(No symbol) [0x0077B216]\n\t(No symbol) [0x00750D97]\n\t(No symbol) [0x0075253D]\n\tGetHandleVerifier [0x00B0ABF2+2510930]\n\tGetHandleVerifier [0x00B38EC1+2700065]\n\tGetHandleVerifier [0x00B3C86C+2714828]\n\tGetHandleVerifier [0x00943480+645344]\n\t(No symbol) [0x00830FD2]\n\t(No symbol) [0x00836C68]\n\t(No symbol) [0x00836D4B]\n\t(No symbol) [0x00840D6B]\n\tBaseThreadInitThunk [0x75C700F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C77BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C77B8E+238]\n\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\QA_WEB\\Pages\\personalAreaQA_Page.py\", line 98, in click_Save_button\n    self.driver.find_element(By.XPATH, Locators_PersonalArea.SAVE_BUTTON_XPATH).click()\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1677091173768, "stop": 1677091174912}], "attachments": [{"name": "stdout", "source": "7af611da-1ae9-4fa8-8106-cecbb7fbe46e-attachment.txt", "type": "text/plain"}], "start": 1677091170790, "stop": 1677091174919, "uuid": "f728672d-48e4-4f8f-88f2-6bbfcfd27884", "historyId": "c13c6cd3f2a0258d2e3ce0d065168787", "testCaseId": "bafde4531bf4f405857570567c9bc4c5", "fullName": "test_PersonalArea.Test_personalArea_Chrome#test_Personal_area_all_with_null_city", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Valid_Login_With_login_Code')"}, {"name": "suite", "value": "test_PersonalArea"}, {"name": "subSuite", "value": "Test_personalArea_Chrome"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "13768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_PersonalArea"}]}