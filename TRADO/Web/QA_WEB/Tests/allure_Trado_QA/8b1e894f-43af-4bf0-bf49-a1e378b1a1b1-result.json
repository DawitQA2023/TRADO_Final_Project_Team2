{"name": "test_add_product_Add_To_Cart_10", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TRADO.QA_WEB.Utils.utils_QA.Utils object at 0x0000015300961570>, expected = 'Goats', actual = 'goats'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n>           assert expected == actual\nE           AssertionError\n\n..\\Utils\\utils_QA.py:15: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TRADO.QA_WEB.Tests.testQA_Product.Test_Snack_Product02 object at 0x000001537FCE5BD0>\n\n    @pytest.mark.sanity\n    @allure.description('Click \" +  TO CART PRODUCTS\" IN SNACK ')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_product_Add_To_Cart_10(self):\n        driver = self.driver\n        SNACK = Product_page(driver)\n        SNACK.Click_snack_link()\n        SNACK.Click_goat_product()\n        SNACK.Click_plus_button(2)\n        Text1 = SNACK.Assert_text(path.ADDED_PRODUCT_NAME)\n        Text2 = SNACK.Assert_text(path.DISPLAY_NAME_TITLE)\n>       Utils(driver).assertion(Text2, Text1)\n\ntestQA_Product.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TRADO.QA_WEB.Utils.utils_QA.Utils object at 0x0000015300961570>, expected = 'Goats', actual = 'goats'\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n            assert expected == actual\n            self.driver.implicitly_wait(1000)\n    \n        except AssertionError:\n            allure.attach(driver.get_screenshot_as_png(), name='screenShot',attachment_type=AttachmentType.PNG)\n>           raise AssertionError\nE           AssertionError\n\n..\\Utils\\utils_QA.py:20: AssertionError"}, "description": "Click \" +  TO CART PRODUCTS\" IN SNACK ", "steps": [{"name": "Click_snack_link", "status": "passed", "start": 1677106085452, "stop": 1677106086551}, {"name": "Click_goat_product", "status": "passed", "start": 1677106086552, "stop": 1677106088674}, {"name": "Click_plus_button", "status": "passed", "parameters": [{"name": "num", "value": "2"}], "start": 1677106088674, "stop": 1677106089783}, {"name": "Assert_text", "status": "passed", "parameters": [{"name": "path", "value": "'/html/body/div[1]/div/div[2]/div[2]/div/div/div[2]/div/div[2]/div[1]/div[2]/div/a/div/div[2]/div[1] '"}], "start": 1677106089783, "stop": 1677106089875}, {"name": "Assert_text", "status": "passed", "parameters": [{"name": "path", "value": "'/html/body/div[1]/div/div[2]/div[2]/div/div/div[2]/div/div[1]/div[1]/div/div[1]/div[2]/div[1]/h1'"}], "start": 1677106089875, "stop": 1677106089904}, {"name": "assertion", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\QA_WEB\\Utils\\utils_QA.py\", line 20, in assertion\n    raise AssertionError\n"}, "attachments": [{"name": "screenShot", "source": "a907eb37-2c73-4e19-b9ae-e43945065cd2-attachment.png", "type": "image/png"}], "parameters": [{"name": "expected", "value": "'Goats'"}, {"name": "actual", "value": "'goats'"}], "start": 1677106089904, "stop": 1677106090063}], "attachments": [{"name": "stdout", "source": "cbf4ad57-34be-4181-9db3-2133fb9ad09d-attachment.txt", "type": "text/plain"}], "start": 1677106085451, "stop": 1677106090065, "uuid": "b559080d-b5dd-4921-9130-fe5aa1ba84e4", "historyId": "ba3ef5ec0a9ca221886c1100e7a3f735", "testCaseId": "2af51835eb6ad6d6a805a0f2484871a9", "fullName": "testQA_Product.Test_Snack_Product02#test_add_product_Add_To_Cart_10", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Valid_Login_With_login_Code')"}, {"name": "suite", "value": "testQA_Product"}, {"name": "subSuite", "value": "Test_Snack_Product02"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "23708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testQA_Product"}]}