{"name": "test_format_change2_button_NL_55", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TRADO.QA_WEB.Utils.utils_QA.Utils object at 0x000001537FDB9090>, expected = 'גורילה גלו', actual = ''\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n>           assert expected == actual\nE           AssertionError\n\n..\\Utils\\utils_QA.py:15: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TRADO.QA_WEB.Tests.testQA_Product.Test_Snack_Product08 object at 0x000001537FD0B2B0>\n\n    @pytest.mark.sanity\n    @allure.description('CLICK \" FORMATE CHANGE2 \"  PRODUCTS ')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_format_change2_button_NL_55(self):\n        driver = self.driver\n        OTHERS = Product_page(driver)\n        OTHERS.Click_format_chang2()\n        OTHERS.Click_format_chang1()\n        Text2 = OTHERS.Assert_text(path.GORILLA_POSTION_XPATH)\n>       Utils(driver).assertion(\"גורילה גלו\", Text2)\n\ntestQA_Product.py:715: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TRADO.QA_WEB.Utils.utils_QA.Utils object at 0x000001537FDB9090>, expected = 'גורילה גלו', actual = ''\n\n    @allure.step\n    @allure.description('This validation method, if the assert failed it will take screenshot')\n    def assertion(self, expected, actual):\n        driver = self.driver\n        try:\n            assert expected == actual\n            self.driver.implicitly_wait(1000)\n    \n        except AssertionError:\n            allure.attach(driver.get_screenshot_as_png(), name='screenShot',attachment_type=AttachmentType.PNG)\n>           raise AssertionError\nE           AssertionError\n\n..\\Utils\\utils_QA.py:20: AssertionError"}, "description": "CLICK \" FORMATE CHANGE2 \"  PRODUCTS ", "steps": [{"name": "Click_format_chang2", "status": "passed", "start": 1677106711016, "stop": 1677106714121}, {"name": "Click_format_chang1", "status": "passed", "start": 1677106714121, "stop": 1677106717223}, {"name": "Assert_text", "status": "passed", "parameters": [{"name": "path", "value": "'/html/body/div[1]/div/div[2]/div[2]/div/div/div[2]/div/div[2]/div[3]/a[1]/div/div[2]/div[1] '"}], "start": 1677106717223, "stop": 1677106717258}, {"name": "assertion", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\QA_Automation\\2023_Final_Project\\TRADO\\QA_WEB\\Utils\\utils_QA.py\", line 20, in assertion\n    raise AssertionError\n"}, "attachments": [{"name": "screenShot", "source": "680a8e35-f29e-4ad8-962b-9e634600efef-attachment.png", "type": "image/png"}], "parameters": [{"name": "expected", "value": "'גורילה גלו'"}, {"name": "actual", "value": "''"}], "start": 1677106717258, "stop": 1677106717478}], "attachments": [{"name": "stdout", "source": "74eb246e-d702-4de9-b163-b21c281f0318-attachment.txt", "type": "text/plain"}], "start": 1677106711016, "stop": 1677106717479, "uuid": "659b5a42-65c2-40bf-9f43-d20cf2db9d0e", "historyId": "f31cd12457b858bee8d75e38b574429b", "testCaseId": "bab515dc2081a5b867db1a465c1d83e7", "fullName": "testQA_Product.Test_Snack_Product08#test_format_change2_button_NL_55", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('WithOut_login_selectField_restaurant_and_cocktails')"}, {"name": "suite", "value": "testQA_Product"}, {"name": "subSuite", "value": "Test_Snack_Product08"}, {"name": "host", "value": "LAPTOP-42FB6NAB"}, {"name": "thread", "value": "23708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testQA_Product"}]}